buildscript {
    repositories {
        gradlePluginPortal()
        maven { url "http://palantir.bintray.com/releases" }
    }

    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'com.netflix.nebula:nebula-publishing-plugin:9.1.1'
        classpath 'com.palantir.baseline:gradle-baseline-java:0.48.0'
        classpath 'com.palantir.gradle.gitversion:gradle-git-version:0.11.0'
        classpath 'gradle.plugin.org.inferred:gradle-processors:2.1.0'
    }
}

apply plugin: 'com.palantir.baseline'
apply plugin: 'com.palantir.git-version'

allprojects {
    version gitVersion()
    group 'com.palantir.conjure.java.runtime'

    repositories {
        jcenter()
        maven { url "http://palantir.bintray.com/releases" }
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'com.palantir.baseline-class-uniqueness'

    sourceCompatibility = 1.8

    tasks.check.dependsOn(javadoc)

    test {
        minHeapSize = "512m"
        maxHeapSize = "512m"
    }
}

allprojects {
    // Allow transitives to not be forced
    dependencyRecommendations { strategy ConflictResolved }

    configurations.configureEach {
        resolutionStrategy.preferProjectModules()
    }
}

configurations {
    unifiedClasspath {
        resolutionStrategy.activateDependencyLocking()
    }
}

dependencies {
    subprojects.each { p ->
        unifiedClasspath p
    }
}

task foo {
    // Force evaluation
    configurations.unifiedClasspath.resolve()
}
